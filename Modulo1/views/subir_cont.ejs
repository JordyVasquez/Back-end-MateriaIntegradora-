<!DOCTYPE html> 
<html lang="es"> 
  <head> 
    <meta charset="utf-8"> 
    <meta name="viewport" content="width=device-width, initial-scale=1"> 
    <title><%= title%></title> 
<link id="template-file" href="templates/template.ejs" rel="import" />  

        <link href="css/font.css" rel='stylesheet'  media="screen">


    <style>[class*="foundicon-"] {font-family: GeneralFoundicons;font-style: normal;}</style>
  </head> 
  <body> 
    <script>
    var getImport = document.querySelector('#template-file'); 
var getContent = getImport.import.querySelector('#template'); 
document.body.appendChild(document.importNode(getContent, true));  

  </script>
         <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
          <h1 class="page-header" id="page-header">Subir al Servidor</h1>
        </div>
            <div class='class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2'>
        <div class='span8 col-md-8 columns eight large-8'>
            <h2>Ingresar los datos para el Contenido</h2>
            <p>La estructura es generada por el json de configuraci√≥n.</p>
       <form action="/upload" method='POST' id='subir' name="subir" enctype='multipart/form-data'>
            <div id='editor' > </div>
               <div class="row" >

        <div  class="col-md-4 col-md-offset-1 col-sm-4 col-sm-offset-1 col-xs-4 col-xs-offset-1 col-lg-4 col-lg-offset-1">

 <button class='btn btn-primary col-md-12 col-sm-12 col-xs-12'  id='cancelar' type="button">Cancelar</button>

           </div>
                 <div  class="col-md-4 col-md-offset-1 col-sm-4 col-sm-offset-1 col-xs-4 col-xs-offset-1 col-lg-4 col-lg-offset-1">

         <button class='btn btn-primary col-md-12 col-sm-12 col-xs-12'  id='enviar' type="button">Subir</button>

           </div>  
             
     
        </div>
        <br>
<input id='output2' type='hidden' name='output2' style='width: 100%; height: 450px; font-family: monospace;' class='form-control'></input>
              </form>
        </div>
        <div class='span4 col-md-4 columns four large-4'>

            <h2>JSON Generado</h2>
            <p><button class='btn btn-primary' id='setvalue'>Actualizar Json Generado</button></p>
            <textarea id='output' style='width: 100%; height: 300px; font-family: monospace;' class='form-control'></textarea>


            <h2>Validation</h2>
            <p>This will update whenever the form changes to show validation errors if there are any.</p>
            <textarea id='validate' style='width: 100%; height: 150px; font-family: monospace;' readonly disabled class='form-control'></textarea>
        </div>

    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>

     <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>  
    <script src="js/bootstrap.min.js"></script>
        <script src='js/jsoneditor.js'></script>
      <script src='js/LZString.js'></script>
    <script>
(function() {
var schema;
 schema = JSON.parse(LZString.decompressFromBase64('<%= json%>'));
 var escena='';
 escena = LZString.decompressFromBase64('<%= escenas%>');
    //if()
            //alert(LZString.decompressFromBase64('<%= escenas%>'))
      JSONEditor.defaults.options.form_name_root = false;
    // Divs/textareas on the page
    var $output = document.getElementById('output');
    var $editor = document.getElementById('editor');
    var $validate = document.getElementById('validate');

    // Buttons

    var $set_value_button = document.getElementById('setvalue');

    var jsoneditor;


    var reload = function(keep_value) {
        var startval = (jsoneditor && keep_value)? jsoneditor.getValue() : window.startval;
        window.startval = undefined;

        if(jsoneditor) jsoneditor.destroy();
        jsoneditor = new JSONEditor($editor,{
            schema: schema,
            startval: startval
        });
        window.jsoneditor = jsoneditor;

        // When the value of the editor changes, update the JSON output and validation message
        jsoneditor.on('change',function() {
            var json = jsoneditor.getValue();

            if(escena!=null){
              if(escena.localeCompare('')==0){

                $output.value = JSON.stringify(json,null,2); 
              }

              else {
                $output.value = escena; 
              }
  
            }
            else{
             $output.value = JSON.stringify(json,null,2); 
            }

      jsoneditor.setValue(JSON.parse($output.value));
            var validation_errors = jsoneditor.validate();
            // Show validation errors if there are any
            if(validation_errors.length) {
                $validate.value = JSON.stringify(validation_errors,null,2);
            }
            else {
                $validate.value = 'valid';
            }

        });
    };
 var rename = function() {
        var header=document.getElementById('editor');
        var rs=header.getElementsByClassName('row');
        for (var i = 0; i < rs.length; i++) {
        var inputs=rs[i].getElementsByTagName('input');
         for (var j = 0; j < inputs.length; j++) {
       inputs[j].name=inputs[j].name.replace('root[',"")
       inputs[j].name=inputs[j].name.replace(/\[/g,"__");
      inputs[j].name=inputs[j].name.replace(/]/g,"");    
        }
        }

    };
     var rename_file = function() {
        var header=document.getElementById('editor');
        var rs=header.getElementsByClassName('row');
        for (var i = 0; i < rs.length; i++) {
        var inputs=rs[i].getElementsByTagName('input');
         for (var j = 0; j < inputs.length; j++) {
          if(inputs[j].type.localeCompare("file")==0){

          inputs[j].name='archivos';
          }  
        }
        }

    };
    // Start the schema and output textareas with initial values
    $output.value = '';


    // When the 'update form' button is clicked, set the editor's value
    $set_value_button.addEventListener('click',function() {
        jsoneditor.setValue(JSON.parse($output.value));
    });



    // Set the theme by loading the right stylesheets

        JSONEditor.defaults.options.theme = 'bootstrap3';
        JSONEditor.defaults.options.iconlib = 'bootstrap3';


    // Get starting value from url
    if(window.location.href.match('[?&]value=([^&]+)')) {
      window.startval = JSON.parse(LZString.decompressFromBase64(window.location.href.match('[?&]value=([^&]+)')[1]));
    }

    JSONEditor.defaults.options.object_layout = 'normal';
    // Specify upload handler
      JSONEditor.defaults.options.upload = function(type, file, cbs) {
        if (type === 'root.upload_fail') cbs.failure('Upload failed');
        else {
          var tick = 0;

          var tickFunction = function() {
            tick += 20;
            console.log('progress: ' + tick);

            if (tick < 100) {
              cbs.updateProgress(tick);
              window.setTimeout(tickFunction, 50)
            } else if (tick == 60) {
              cbs.updateProgress();
              window.setTimeout(tickFunction, 500)
            } else {
              cbs.success(file.name);
            }
          };

          window.setTimeout(tickFunction)
        }
      };
      JSONEditor.defaults.options.form_name_root = false;
    JSONEditor.defaults.options.show_errors = 'interaction';
   JSONEditor.defaults.options['disable_edit_json'] = true;
      JSONEditor.defaults.options['disable_properties'] = true;
   JSONEditor.defaults.options['disable_array_delete_last_row'] = true;
    reload();
rename();
         var $set_schema_button = document.getElementById('enviar');
             var $set_schema_button_cancelar = document.getElementById('cancelar');
                $set_schema_button.addEventListener('click',function() {
                  var bolid=false;
                    rename();
                     var headerw=document.subir.Titulo;
             
                
                rename_file();
                      try {
                    var $schema2 = document.getElementById('output2');
                    var $schema = document.getElementById('output');
                    $schema2.value = $schema.value;
                }
                catch(e) {
                    alert('Invalid Schema: '+e.message);
                    return;
                }
                 if(headerw.value.localeCompare("")!=0){

                    document.subir.submit(); 
                 }
                 else{

                  alert("Titulo esta vacio")
                 }
            });
                       $set_schema_button_cancelar.addEventListener('click',function() {
  
               location.href='contenidos_subidos'
            });
})();
</script>
  </body> 
</html>